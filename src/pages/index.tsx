// noinspection HtmlUnknownTarget
import type {NextPage} from 'next'
import Head from 'next/head'
import {css} from "@emotion/react";
import {Fragment, useCallback, useContext} from "react";
import Button from "../components/button";
import {WalletContext} from "../context/wallet-context";
import algo from "algosdk";
import {ToastContainer, toast} from "react-toastify";
import 'react-toastify/dist/ReactToastify.css';

const styles = {
    root: css`
      min-height: 100vh;
      display: flex;
      flex-flow: column;
      justify-content: center;
      align-items: center;
    `,
    buttons: css`
      display: flex;
      flex-flow: column;
      justify-content: center;
      align-items: center;
      gap: 35px;
    `,
    account: css`
      margin-top: 30px;
      font-size: 1.5rem;
    `
}

function abbreviateAccount(address: string) {
    if(!address) {
        return "";
    }
    return `${address.substring(0, 5)}...${address.substring(address.length-5)}`
}

const Home: NextPage = () => {
    const {connected, connect, disconnect, account, askWalletToSign} = useContext(WalletContext);

    const handleConnect = useCallback(() => {
        if(connected) {
            disconnect().then();
            return;
        }
        connect().then();
    }, [connected, connect, disconnect]);

    const handleSignTxn = useCallback(async () => {
        if(!account) {
            return;
        }
        const algod = new algo.Algodv2("", "https://testnet-api.algonode.cloud", 443);
        const params = await algod.getTransactionParams().do();
        const txn = algo.makePaymentTxnWithSuggestedParams(
            account,
            account,
            0,
            undefined,
            undefined,
            params
        );

        try {
            await askWalletToSign([{txn}]);
            toast.success("Thanks for signing!", {theme: "dark"});
        }
        catch(exc: any) {
            if(exc.message?.startsWith("Transaction Request Rejected")) {
                toast.error("You rejected the transaction.", {theme: "dark"});
            }
            else {
                toast.error("Some other error.", {theme: "dark"});
            }
        }
    }, [account, askWalletToSign]);

    return (
        <Fragment>
            <Head>
                <title>Pera Popup Testing</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main css={styles.root}>
                <section css={styles.buttons}>
                    <Button onClick={handleConnect}>
                        {connected ? "Disconnect" : "Connect Wallet"}
                    </Button>
                    <Button disabled={!connected} onClick={handleSignTxn}>
                        Sign Transaction
                    </Button>
                </section>
                <section css={styles.account}>
                    {account ? abbreviateAccount(account) : "Please connect your wallet."}
                </section>
            </main>
            <ToastContainer/>
        </Fragment>
    )
}

export default Home;
